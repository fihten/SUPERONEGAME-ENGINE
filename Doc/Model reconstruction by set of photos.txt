TODO:
1. fix build - done
2. restore last successful test - done
3. try check not a linearness but linearness AND equalness of linear coefficient to transformation jacobian
4. try to calculate linear coefficient based on photo samples relative to its average values
5. try to optimize calculation time
6. write test for searching the same points on two diffrent photos
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Coordinates of i-th camera:
Rc[i]
Ac[i]
Bc[i]

Coordinates of i-th camera direction:
Ad[i]
Bd[i]
Cd[i]

I = {1, 0, 0}
J = {0, 1, 0}
K = {0, 0, 1}

I' = I = {1, 0, 0}
J' = {0, cos(Ad[i]), sin(Ad[i])}
K' = {0, -sin(Ad[i]), cos(Ad[i])}

    | cos(Bd[i]) sin(Bd[i])   0|
M = |-sin(Bd[i]) cos(Bd[i])   0|
    |          0          0   1|

I" = { cos(Bd[i]), sin(Bd[i]), 0}
J" = { -cos(Ad[i])*sin(Bd[i]), cos(Ad[i])*cos(Bd[i]), sin(Ad[i])}
K" = { sin(Ad[i])*sin(Bd[i]), -sin(Ad[i])*cos(Bd[i]), cos(Ad[i])}

I''' = cos(Cd[i])*I"+sin(Cd[i])*J" = 

{cos(Bd[i])*cos(Cd[i]), sin(Bd[i])*cos(Cd[i]), 0} +
{-cos(Ad[i])*sin(Bd[i])*sin(Cd[i]), cos(Ad[i])*cos(Bd[i])*sin(Cd[i]), sin(Ad[i])*sin(Cd[i])} = 

{cos(Bd[i])*cos(Cd[i])-cos(Ad[i])*sin(Bd[i])*sin(Cd[i]), sin(Bd[i])*cos(Cd[i])+cos(Ad[i])*cos(Bd[i])*sin(Cd[i]), sin(Ad[i])*sin(Cd[i])}

J''' = -sin(Cd[i])*I"+cos(Cd[i])*J" = 

-sin(Cd[i])*{ cos(Bd[i]), sin(Bd[i]), 0} +
cos(Cd[i])*{ -cos(Ad[i])*sin(Bd[i]), cos(Ad[i])*cos(Bd[i]), sin(Ad[i])} = 

{-cos(Bd[i])*sin(Cd[i]), -sin(Bd[i])*sin(Cd[i]), 0} +
{-cos(Ad[i])*sin(Bd[i])*cos(Cd[i]), cos(Ad[i])*cos(Bd[i])*cos(Cd[i]), sin(Ad[i])*cos(Cd[i])} = 

{-cos(Bd[i])*sin(Cd[i])-cos(Ad[i])*sin(Bd[i])*cos(Cd[i]), -sin(Bd[i])*sin(Cd[i])+cos(Ad[i])*cos(Bd[i])*cos(Cd[i]), sin(Ad[i])*cos(Cd[i])}

K''' = K" = { sin(Ad[i])*sin(Bd[i]), -sin(Ad[i])*cos(Bd[i]), cos(Ad[i])}

Coordinates of j-th point:
R[j]
A[i]
B[i]


